// +build js, wasm

package framework

import (
	"context"
	"fmt"
	"log"


	"github.com/josephbudd/kickwasm/proofs/tp2b/tp2btest/rendererprocess/framework/lpc"
	"github.com/josephbudd/kickwasm/proofs/tp2b/tp2btest/rendererprocess/framework/viewtools"
	"github.com/josephbudd/kickwasm/proofs/tp2b/tp2btest/rendererprocess/paneling"
	provebuttonpanel "github.com/josephbudd/kickwasm/proofs/tp2b/tp2btest/rendererprocess/panels/ProveButton/ProveButtonPanel"
	schoolcoursenotreadypanel "github.com/josephbudd/kickwasm/proofs/tp2b/tp2btest/rendererprocess/panels/SchoolButton/SchoolCourseNotReadyPanel"
	schoolcoursecopychoosepanel "github.com/josephbudd/kickwasm/proofs/tp2b/tp2btest/rendererprocess/panels/SchoolButton/SchoolPanel/SchoolCourseCopyTab/SchoolCourseCopyChoosePanel"
	schoolcoursecopycompletedpanel "github.com/josephbudd/kickwasm/proofs/tp2b/tp2btest/rendererprocess/panels/SchoolButton/SchoolPanel/SchoolCourseCopyTab/SchoolCourseCopyCompletedPanel"
	schoolcoursecopypracticepanel "github.com/josephbudd/kickwasm/proofs/tp2b/tp2btest/rendererprocess/panels/SchoolButton/SchoolPanel/SchoolCourseCopyTab/SchoolCourseCopyPracticePanel"
	schoolcoursecopytestpanel "github.com/josephbudd/kickwasm/proofs/tp2b/tp2btest/rendererprocess/panels/SchoolButton/SchoolPanel/SchoolCourseCopyTab/SchoolCourseCopyTestPanel"
	schoolcoursekeychoosepanel "github.com/josephbudd/kickwasm/proofs/tp2b/tp2btest/rendererprocess/panels/SchoolButton/SchoolPanel/SchoolCourseKeyTab/SchoolCourseKeyChoosePanel"
	schoolcoursekeycompletedpanel "github.com/josephbudd/kickwasm/proofs/tp2b/tp2btest/rendererprocess/panels/SchoolButton/SchoolPanel/SchoolCourseKeyTab/SchoolCourseKeyCompletedPanel"
	schoolcoursekeypracticepanel "github.com/josephbudd/kickwasm/proofs/tp2b/tp2btest/rendererprocess/panels/SchoolButton/SchoolPanel/SchoolCourseKeyTab/SchoolCourseKeyPracticePanel"
	schoolcoursekeytestpanel "github.com/josephbudd/kickwasm/proofs/tp2b/tp2btest/rendererprocess/panels/SchoolButton/SchoolPanel/SchoolCourseKeyTab/SchoolCourseKeyTestPanel"
	schoolcourseselectpanel "github.com/josephbudd/kickwasm/proofs/tp2b/tp2btest/rendererprocess/panels/SchoolButton/SchoolPanel/SchoolCourseTab/SchoolCourseSelectPanel"
	schoolcoursestatspanel "github.com/josephbudd/kickwasm/proofs/tp2b/tp2btest/rendererprocess/panels/SchoolButton/SchoolPanel/SchoolCourseTab/SchoolCourseStatsPanel"
)

/*

	DO NOT EDIT THIS FILE.

	This file is generated by kickasm and regenerated by rekickasm.

*/

// DoMarkupPanels builds and runs the markup panels.
func DoMarkupPanels(ctx context.Context, ctxCancel context.CancelFunc, receiveChan lpc.Receiving, sendChan lpc.Sending, help *paneling.Help) (err error) {
	
	defer func() {
		if err != nil {
			err = fmt.Errorf("DoMarkupPanels: %w", err)
			log.Println("Error: " + err.Error())
		}
	}()

	// 1. Prepare the spawn panels.

	// 2. Construct the panel code.
	var proveButtonPanel *provebuttonpanel.Panel
	if proveButtonPanel, err = provebuttonpanel.NewPanel(ctx, ctxCancel, receiveChan, sendChan, help); err != nil {
		return
	}
	var schoolCourseCopyChoosePanel *schoolcoursecopychoosepanel.Panel
	if schoolCourseCopyChoosePanel, err = schoolcoursecopychoosepanel.NewPanel(ctx, ctxCancel, receiveChan, sendChan, help); err != nil {
		return
	}
	var schoolCourseCopyCompletedPanel *schoolcoursecopycompletedpanel.Panel
	if schoolCourseCopyCompletedPanel, err = schoolcoursecopycompletedpanel.NewPanel(ctx, ctxCancel, receiveChan, sendChan, help); err != nil {
		return
	}
	var schoolCourseCopyPracticePanel *schoolcoursecopypracticepanel.Panel
	if schoolCourseCopyPracticePanel, err = schoolcoursecopypracticepanel.NewPanel(ctx, ctxCancel, receiveChan, sendChan, help); err != nil {
		return
	}
	var schoolCourseCopyTestPanel *schoolcoursecopytestpanel.Panel
	if schoolCourseCopyTestPanel, err = schoolcoursecopytestpanel.NewPanel(ctx, ctxCancel, receiveChan, sendChan, help); err != nil {
		return
	}
	var schoolCourseKeyChoosePanel *schoolcoursekeychoosepanel.Panel
	if schoolCourseKeyChoosePanel, err = schoolcoursekeychoosepanel.NewPanel(ctx, ctxCancel, receiveChan, sendChan, help); err != nil {
		return
	}
	var schoolCourseKeyCompletedPanel *schoolcoursekeycompletedpanel.Panel
	if schoolCourseKeyCompletedPanel, err = schoolcoursekeycompletedpanel.NewPanel(ctx, ctxCancel, receiveChan, sendChan, help); err != nil {
		return
	}
	var schoolCourseKeyPracticePanel *schoolcoursekeypracticepanel.Panel
	if schoolCourseKeyPracticePanel, err = schoolcoursekeypracticepanel.NewPanel(ctx, ctxCancel, receiveChan, sendChan, help); err != nil {
		return
	}
	var schoolCourseKeyTestPanel *schoolcoursekeytestpanel.Panel
	if schoolCourseKeyTestPanel, err = schoolcoursekeytestpanel.NewPanel(ctx, ctxCancel, receiveChan, sendChan, help); err != nil {
		return
	}
	var schoolCourseNotReadyPanel *schoolcoursenotreadypanel.Panel
	if schoolCourseNotReadyPanel, err = schoolcoursenotreadypanel.NewPanel(ctx, ctxCancel, receiveChan, sendChan, help); err != nil {
		return
	}
	var schoolCourseSelectPanel *schoolcourseselectpanel.Panel
	if schoolCourseSelectPanel, err = schoolcourseselectpanel.NewPanel(ctx, ctxCancel, receiveChan, sendChan, help); err != nil {
		return
	}
	var schoolCourseStatsPanel *schoolcoursestatspanel.Panel
	if schoolCourseStatsPanel, err = schoolcoursestatspanel.NewPanel(ctx, ctxCancel, receiveChan, sendChan, help); err != nil {
		return
	}

	// 3. Size the app.
	viewtools.SizeApp()

	// 4. Start each panel's message and event dispatchers.
	proveButtonPanel.StartDispatchers()
	schoolCourseCopyChoosePanel.StartDispatchers()
	schoolCourseCopyCompletedPanel.StartDispatchers()
	schoolCourseCopyPracticePanel.StartDispatchers()
	schoolCourseCopyTestPanel.StartDispatchers()
	schoolCourseKeyChoosePanel.StartDispatchers()
	schoolCourseKeyCompletedPanel.StartDispatchers()
	schoolCourseKeyPracticePanel.StartDispatchers()
	schoolCourseKeyTestPanel.StartDispatchers()
	schoolCourseNotReadyPanel.StartDispatchers()
	schoolCourseSelectPanel.StartDispatchers()
	schoolCourseStatsPanel.StartDispatchers()

	// 5. Start each panel's initial calls.
	proveButtonPanel.InitialJobs()
	schoolCourseCopyChoosePanel.InitialJobs()
	schoolCourseCopyCompletedPanel.InitialJobs()
	schoolCourseCopyPracticePanel.InitialJobs()
	schoolCourseCopyTestPanel.InitialJobs()
	schoolCourseKeyChoosePanel.InitialJobs()
	schoolCourseKeyCompletedPanel.InitialJobs()
	schoolCourseKeyPracticePanel.InitialJobs()
	schoolCourseKeyTestPanel.InitialJobs()
	schoolCourseNotReadyPanel.InitialJobs()
	schoolCourseSelectPanel.InitialJobs()
	schoolCourseStatsPanel.InitialJobs()

	return
}
