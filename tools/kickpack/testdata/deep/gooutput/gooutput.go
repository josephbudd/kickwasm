package gooutput

// Contents returns the contents of the file at path and if found.
func Contents(path string) (contents []byte, found bool) {
	contents, found = fileStore[path]
	return
}

// Paths returns a slice of the file paths.
func Paths() (paths []string) {
	l := len(fileStore)
	paths = make([]string, 0, l)
	for k := range fileStore {
		paths = append(paths, k)
	}
	return
}

// fileStore is a store of various files.
var fileStore =  map[string][]byte{
    "../src2/text/something.txt":[]byte{0x73, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x69, 0x6e, 0x67},
    "../src2/text/hello_world.txt":[]byte{0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x77, 0x6f, 0x72, 0x6c, 0x64},
    "me.txt":[]byte{0x6d, 0x65, 0xa},
    "src1/css/forms.css":[]byte{0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x66, 0x61, 0x6e, 0x63, 0x79, 0x20, 0x7b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3a, 0x72, 0x65, 0x64, 0x3b, 0x7d},
    "src1/css/images.css":[]byte{0x69, 0x6d, 0x67, 0x2e, 0x66, 0x61, 0x6e, 0x63, 0x79, 0x7b, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x3a, 0x20, 0x31, 0x70, 0x78, 0x20, 0x72, 0x65, 0x64, 0x20, 0x73, 0x6f, 0x6c, 0x69, 0x64, 0x3b, 0x7d},
}
