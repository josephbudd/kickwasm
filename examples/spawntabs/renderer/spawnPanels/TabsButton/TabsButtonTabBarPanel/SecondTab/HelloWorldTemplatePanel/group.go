package helloworldtemplatepanel

import (
	"syscall/js"

	"github.com/pkg/errors"
)

/*

	DO NOT EDIT THIS FILE.

	This file is generated by kickasm and regenerated by rekickasm.

*/

const (
	tabBarID        = "tabsMasterView_home_pad_TabsButton_TabsButtonTabBarPanel_tab_bar"
	tabName         = "SecondTab"
	tabPanelHeading = "Second Tab"
)

// panelGroup is a group of 1 panel.
// It also has a show panel func for each panel in this panel group.
type panelGroup struct {
	uniqueID    uint64
	panelNameID map[string]string

	helloWorldTemplatePanel js.Value
}

func (group *panelGroup) defineMembers() (err error) {

	defer func() {
		if err != nil {
			err = errors.WithMessage(err, "(group *panelGroup) defineMembers()")
		}
	}()

	var id string
	id = tools.BuildSpawnTabButtonMarkupPanelID(tabBarID, tabName, "HelloWorldTemplatePanel", group.uniqueID)
	if group.helloWorldTemplatePanel = notJS.GetElementByID(id); group.helloWorldTemplatePanel == null {
		err = errors.New("unable to find #" + id)
		return
	}

	return
}

/*
	Show panel funcs.

	Call these from the controller, presenter and caller.
*/

// showHelloWorldTemplatePanel shows the panel you named HelloWorldTemplatePanel while hiding any other panels in this panel group.
// This panel will become visible only when this group of panels becomes visible.
/* Your note for this panel is:
Yet another "hello world".
*/
func (group *panelGroup) showHelloWorldTemplatePanel() {
	tools.ShowPanelInTabGroup(group.helloWorldTemplatePanel)
}
