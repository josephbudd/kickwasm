// +build js, wasm

package helloworldtemplatepanel

import (
	"fmt"
	"syscall/js"

	"github.com/josephbudd/kickwasm/examples/spawnwidgets/rendererprocess/api/dom"
	"github.com/josephbudd/kickwasm/examples/spawnwidgets/rendererprocess/api/markup"
	"github.com/josephbudd/kickwasm/examples/spawnwidgets/rendererprocess/framework/viewtools"
)

/*

	DO NOT EDIT THIS FILE.

	This file is generated by kickasm and regenerated by rekickasm.

*/

// panelGroup is a group of 1 panel.
// It also has a show panel func for each panel in this panel group.
type panelGroup struct {
	uniqueID    uint64
	document  *dom.DOM
	panelNameID map[string]string

	helloWorldTemplatePanel js.Value
}

func (group *panelGroup) defineMembers() (err error) {

	defer func() {
		if err != nil {
			err = fmt.Errorf("(group *panelGroup) defineMembers()")
		}
	}()

	var id string
    var panel *markup.Element
	id = viewtools.BuildSpawnTabButtonMarkupPanelID("mainMasterView_home_pad_TabsButton_TabsButtonTabBarPanel_tab_bar", "SecondTab", "HelloWorldTemplatePanel", group.uniqueID)
    if panel = group.document.ElementByID(id); panel == nil {
		err = fmt.Errorf("unable to find #%s", id)
		return
    }
    group.helloWorldTemplatePanel = panel.JSValue()

	return
}

/*
	Show panel funcs.

	Call these from the controller, presenter and messenger.
*/

// showHelloWorldTemplatePanel shows the panel you named HelloWorldTemplatePanel while hiding any other panels in this panel group.
// This panel will become visible only when this group of panels becomes visible.
/* Your note for this panel is:
Yet another "hello world".
*/
func (group *panelGroup) showHelloWorldTemplatePanel() {
	viewtools.ShowPanelInTabGroup(group.helloWorldTemplatePanel)
}
